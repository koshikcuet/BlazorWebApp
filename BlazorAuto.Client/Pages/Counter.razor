@page "/counter"
@rendermode InteractiveAuto
@attribute [StreamRendering]

@inject Blazored.LocalStorage.ILocalStorageService localStorage
@* @inject Blazored.SessionStorage.ISessionStorageService ssnStorage *@
@inject IJSRuntime Js

<PageTitle>Counter</PageTitle>

<Loader IsLoading="@isLoading"></Loader>
@if (!isLoading)
{
    <h1>Counter</h1>


    <div>
        <p id="cnt">Current count: @currentCount</p>

        <button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
    </div>
    <div>
        <button class="btn btn-secondary" @onclick="ShowConfirm">Confirm</button>
        <p>Current Result: @Result</p>
    </div>
    


}

@code {
    [Parameter]
    public bool IsLoading { get; set; }

    private int currentCount = 0;
    private bool isInitialized = false;
    private bool isLoading = true; // State to control loader
    private string Result="";
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //await Task.Delay(1000);
        if (firstRender && !isInitialized)
        {
            //string? cnt = await ssnStorage.GetItemAsync<string>("cnt");
            string? cnt = await localStorage.GetItemAsync<string>("cnt");
            if (cnt != null)
            {
                currentCount = Convert.ToInt32(cnt);
            }
            isInitialized = true;
            isLoading = false;
            StateHasChanged(); 
        }
    }


    private async void IncrementCount()
    {
        currentCount++;
        //await ssnStorage.SetItemAsStringAsync("cnt", currentCount.ToString());
        await localStorage.SetItemAsStringAsync("cnt", currentCount.ToString());
        await Js.InvokeVoidAsync("chngColor", args: [currentCount, "Hello"]);
    }

    private async Task ShowConfirm()
    {
        string prmt = "Are you sure?";
        bool confirmed = await Js.InvokeAsync<bool>("confirm", args: prmt);
        Result = confirmed ? "You clicked OK" : "You clicked Cancel";
    }

    private async Task ShowPrompt()
    {
        string name = await Js.InvokeAsync<string>("prompt", args: "What is your name?");
        Result = "Your name is: " + name;
    }

}
